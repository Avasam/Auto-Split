# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions
name: Lint and build
on:
  push:
    branches:
      - main
      - master
    paths:
      - '**.py'
      - '**.pyi'
      - '**.ui'
  pull_request:
    branches:
      - main
      - master
      - dev
      - dev*
      - 2.0.0
    paths:
      - '**.py'
      - '**.pyi'
      - '**.ui'
jobs:
  Pyright:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            requirements: requirements-dev-win
          - os: ubuntu-latest
            requirements: requirements-dev
    steps:
      - name: Checkout ${{ github.repository }}/${{ github.ref }}
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'scripts/requirements*.txt'
      - run: pip install wheel --upgrade
      - name: Install dependencies
        run: |
          pip install -r "scripts/${{ matrix.requirements }}.txt"
          npm install -g pyright
          npm list -g pyright
      - run: scripts/compile_resources.ps1
        shell: pwsh
      - name: Analysing the code with Pyright
        run: pyright --warnings
  Pylint:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            requirements: requirements-dev-win
          - os: ubuntu-latest
            requirements: requirements-dev
    steps:
      - name: Checkout ${{ github.repository }}/${{ github.ref }}
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'scripts/requirements*.txt'
      - run: pip install wheel --upgrade
      - name: Install dependencies
        run: pip install -r "scripts/${{ matrix.requirements }}.txt"
      - run: scripts/compile_resources.ps1
        shell: pwsh
      - name: Analysing the code with Pylint
        run: pylint --reports=y --output-format=colorized src/
  Flake8:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            requirements: requirements-dev-win
          - os: ubuntu-latest
            requirements: requirements-dev
    steps:
      - name: Checkout ${{ github.repository }}/${{ github.ref }}
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'scripts/requirements*.txt'
      - run: pip install wheel --upgrade
      - name: Install dependencies
        run: pip install -r "scripts/${{ matrix.requirements }}.txt"
      - run: scripts/compile_resources.ps1
        shell: pwsh
      - name: Analysing the code with Flake8
        run: flake8
  Bandit:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10"]
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            requirements: requirements-dev-win
          - os: ubuntu-latest
            requirements: requirements-dev
    steps:
      - name: Checkout ${{ github.repository }}/${{ github.ref }}
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'scripts/requirements*.txt'
      - run: pip install wheel --upgrade
      - name: Install dependencies
        run: pip install -r "scripts/${{ matrix.requirements }}.txt"
      - run: scripts/compile_resources.ps1
        shell: pwsh
      - name: Analysing the code with Bandit
        run: bandit -n 1 --severity-level medium --recursive src
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        os: [windows-latest, ubuntu-latest]
        include:
          - os: windows-latest
            requirements: requirements-win
          - os: ubuntu-latest
            requirements: requirements
    steps:
      - name: Checkout ${{ github.repository }}/${{ github.ref }}
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - run: pip install wheel --upgrade
      - name: Install dependencies
        run: pip install -r "scripts/${{ matrix.requirements }}.txt"
      - run: scripts/build.ps1
        shell: pwsh
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: AutoSplit for ${{ matrix.os }} (Python ${{ matrix.python-version }})
          path: dist/AutoSplit.*
