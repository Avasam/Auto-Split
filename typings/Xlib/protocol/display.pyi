""" # noqa Y021
This type stub file was generated by pyright.
"""

from typing import Any, Literal

from . import rq

#


def _bytes_item(x: str) -> str:
    ...


class Display:
    resource_classes = ...
    extension_major_opcodes = ...
    error_classes = ...
    event_classes = ...

    def __init__(self, display=...) -> None:
        ...

    def get_display_name(self) -> Any:
        ...

    def get_default_screen(self) -> Any:
        ...

    def fileno(self) -> Any:
        ...

    def next_event(self):
        ...

    def pending_events(self) -> int:
        ...

    def flush(self) -> None:
        ...

    def close(self) -> None:
        ...

    def set_error_handler(self, handler) -> None:
        ...

    def allocate_resource_id(self):
        ...

    def free_resource_id(self, rid) -> None:
        ...

    def get_resource_class(self, class_name, default=...) -> None:
        ...

    def set_extension_major(self, extname, major) -> None:
        ...

    def get_extension_major(self, extname):
        ...

    def add_extension_event(self, code, evt) -> None:
        ...

    def add_extension_error(self, code, err) -> None:
        ...

    def check_for_error(self) -> None:
        ...

    def send_request(self, request, wait_for_response) -> None:
        ...

    def close_internal(self, whom) -> None:
        ...

    def send_and_recv(self, flush=..., event=..., request=..., recv=...):
        ...

    def parse_response(self, request):
        ...

    def parse_error_response(self, request) -> Literal[0]:
        ...

    def default_error_handler(self, err) -> None:
        ...

    def parse_request_response(self, request):
        ...

    def parse_event_response(self, etype) -> None:
        ...

    def get_waiting_request(self, sno):
        ...

    def get_waiting_replyrequest(self):
        ...

    def parse_connection_setup(self) -> Literal[0, 1] | None:
        ...


PixmapFormat = ...
VisualType = ...
Depth = ...
Screen = ...


class ConnectionSetupRequest(rq.GetAttrData):
    _request = ...
    _reply = ...
    _success_reply = ...

    def __init__(self, display, *args, **keys) -> None:
        ...
